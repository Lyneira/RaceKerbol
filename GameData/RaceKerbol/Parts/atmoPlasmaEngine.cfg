// Copyright 2015 Lyneira
// Licensed under CC-BY-NC-SA: http://creativecommons.org/licenses/by-nc-sa/4.0/
// Atmospheric plasma engine for the Race Kerbol challenge.

// Based on NovaSilisko's ionEngine, RoverDude's solidBooster_sm (RT-5) and Porkjet's radialEngineBody (Engine Pre-cooler)
PART
{
	name = atmoPlasmaEngine
	module = Part
	author = Lyneira
	rescaleFactor = 1
	scale = 1
	MODEL
	{
		model = Squad/Parts/Engine/ionEngine/model
		scale = 0.98, 0.7, 0.98
		position = 0.0, -0.35, 0.0
	}
	MODEL
	{
		model = Squad/Parts/Engine/solidBoosterRT-5/SRB_RT5
		scale = 0.555, 0.625, 0.555
		position = 0.0, -0.038, 0.0
	}
	MODEL
	{
		model = Squad/Parts/Aero/engineNacelle/Nacelle2
		scale = 0.5, 0.32, 0.5
	}
	// Original unrescaled nodes
	//node_stack_top = 0.0, 0.9375, 0.0, 0.0, 1.0, 0.0
	//node_stack_bottom = 0.0, -0.9375, 0.0, 0.0, -1.0, 0.0
	//node_attach = 0.0, 0.0, 0.625, 0.0, 0.0, -1.0, 1
	node_stack_top = 0.0, 0.305, 0.0, 0.0, 1.0, 0.0, 0
	node_stack_bottom = 0.0, -0.54, 0.0, 0.0, -1.0, 0.0, 0
	node_attach = 0.0, 0.0, 0.3125, 0.0, 0.0, -1.0, 1

	TechRequired = ionPropulsion
	entryCost = 14000
	cost = 7000
	category = Engine
	subcategory = 0
	title = AP-7000 "Sunset" Atmospheric Plasma Engine
	manufacturer = Ionic Symphonic Protonic Electronics
	description = A high-tech adaptation of ISP Electronics' well-known ion engine "Dawn", the Sunset gets rid of propellant requirements altogether, but only works in the atmosphere. Requires a lot of Electric Charge, so keep chasing that sun to keep flying!
	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,1,0
	mass = 0.3
	// heatConductivity = 0.04 // 1/3 default
	skinInternalConductionMult = 4.0
	emissiveConstant = 0.5 // yes, it's white. But let's claim it's an emissive white...
	dragModelType = default
	maximum_drag = 0.3
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 7
	maxTemp = 2000 // = 3600
	bulkheadProfiles = size0, srf

	EFFECTS
	{
		running_closed
		{
			MODEL_MULTI_PARTICLE
			{
				// Use rapier exhaust
				modelName = Squad/FX/shockExhaust_blue_small
				// rapier exhaust is thrustTransform
				transformName = thrustTransform
				emission = 0.0 0.0
				emission = 0.05 0.0
				emission = 0.075 0.25
				emission = 1.0 1.25
				speed = 0.0 0.5
				speed = 1.0 1.2
			}
		}
	}
	MODULE
	{
		name = ModuleEnginesFX
		thrustVectorTransformName = thrustTransform
		engineID = EngineAP
		runningEffectName = running_closed
		exhaustDamage = True
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 30
		heatProduction = 100
		EngineType = Electric
		
		// Jet params
		atmChangeFlow = True
		useVelCurve = True
		useAtmCurve = True
		flameoutBar = 0.01
		
		machLimit = 0.75
		machHeatMult = 3.5
		velCurve
		{
			key = 0 1.0
			key = 0.2 1.0
			key = 0.35 0.9
			key = 0.38 0.8
			key = 0.4 0.6
			key = 0.55 0
		}
		atmCurve
		{
			key = 0 0 0 0
			key = 0.1 0.1 1.276916 1.276916
			key = 0.297 0.35 1.304143 1.304143
			key = 0.538 0.59 0.8485174 0.8485174
			key = 1 1 0.8554117 0
		}
		
		PROPELLANT
        {
            name = ElectricCharge
            ratio = 4
            DrawGauge = True
        }
        PROPELLANT
        {
            name = IntakeAir
            ratio = 1
            DrawGauge = True
        }

        atmosphereCurve
        {
            key = 0 320
        }
	}

	MODULE
	{
		name = ModuleResourceIntake
		resourceName = IntakeAir
		checkForOxygen = true
		area = 0.005
		intakeSpeed = 10
		intakeTransformName = Intake
	}

    RESOURCE
    {
        name = IntakeAir
        amount = 0
        maxAmount = 0.1
        isTweakable = false
        hideFlow = true
    }

	MODULE
	{
		name = ModuleSurfaceFX
		thrustProviderModuleIndex = 0
		fxMax = 0.7
		maxDistance = 50
		falloff = 2
		thrustTransformName = thrustTransform
	}
	// Add ion engine throttle animation
	MODULE
	{
		name = FXModuleAnimateThrottle
		animationName = colorAnimation
		dependOnEngineState = True
		responseSpeed = 0.5
	}
	MODULE
	{
		name = ModuleAnimateHeat
		ThermalAnim = Nacelle2Heat
	}
}

// If CRP is installed, use IntakeAtm.
@PART[atmoPlasmaEngine]:NEEDS[CommunityResourcePack]
{
	@MODULE[ModuleResourceIntake]:HAS[#resourceName[IntakeAir]]
	{
		@resourceName = IntakeAtm
		@checkForOxygen = false
	}
	@RESOURCE[IntakeAir]
	{
		@name = IntakeAtm
	}
	@MODULE[ModuleEnginesFX]
	{
		@PROPELLANT[IntakeAir]
		{
			@name = IntakeAtm
		}
	}
}